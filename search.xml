<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>设计原则</title>
      <link href="/2019/05/23/%E8%AE%BE%E8%AE%A1%E5%8E%9F%E5%88%99/"/>
      <url>/2019/05/23/%E8%AE%BE%E8%AE%A1%E5%8E%9F%E5%88%99/</url>
      
        <content type="html"><![CDATA[<h1 id="设计原则"><a href="#设计原则" class="headerlink" title="设计原则"></a>设计原则</h1><ul><li><p>小即是美</p></li><li><p>让每个程序只做好一件事</p></li><li><p>快速建立原型</p></li><li><p>舍弃高效率而取可移植性</p></li><li><p>采用存文本来存储数据</p></li><li><p>软件复用：充分利用软件的杠杆效应</p></li><li><p>使用shell脚本来提高杠杆效应和可移植性</p></li><li><p>避免强制性的用户界面</p></li><li><p>让每个程序都称为过滤器</p></li><li><p>小准则</p><ul><li>允许用户定制环境</li><li>尽量使操作系统内核小而轻量化</li><li>使用小写字母并尽量简短</li><li>沉默是金</li><li>各部分之和大于整体</li><li>寻求90%的解决方案</li></ul></li></ul><h2 id="SOLID-五大设计原则"><a href="#SOLID-五大设计原则" class="headerlink" title="SOLID 五大设计原则"></a>SOLID 五大设计原则</h2><ul><li>S - 单一职责原则</li><li>O - 开放封闭原则</li><li>L - 李氏置换原则</li><li>I - 接口独立原则</li><li>D - 依赖导致原则</li></ul>]]></content>
      
      
      <categories>
          
          <category> 编程思想 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 设计原则 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>node.js:安装express框架并快速搭建工程目录</title>
      <link href="/2019/05/18/node.js-%E5%AE%89%E8%A3%85express%E6%A1%86%E6%9E%B6%E5%B9%B6%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BA%E5%B7%A5%E7%A8%8B%E7%9B%AE%E5%BD%95/"/>
      <url>/2019/05/18/node.js-%E5%AE%89%E8%A3%85express%E6%A1%86%E6%9E%B6%E5%B9%B6%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BA%E5%B7%A5%E7%A8%8B%E7%9B%AE%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<h3 id="node-js-express快速搭建工程目录"><a href="#node-js-express快速搭建工程目录" class="headerlink" title="node.js:express快速搭建工程目录"></a>node.js:express快速搭建工程目录</h3><ul><li><p>安装<code>node.js</code></p></li><li><p>安装全局<code>express</code> </p><p>安装：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g express</span><br></pre></td></tr></table></figure><p>生成项目：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">express -e Blog</span><br></pre></td></tr></table></figure><p>安装依赖：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd Blog</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure><p>开启服务：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmp start</span><br></pre></td></tr></table></figure><p>本地预览：</p><p><a href="http://localhost:3000(默认3000端口)" target="_blank" rel="noopener">http://localhost:3000(默认3000端口)</a></p><p>卸载express：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm uninstall express</span><br></pre></td></tr></table></figure></li><li><p>github-express：</p><p><a href="https://github.com/expressjs/express" target="_blank" rel="noopener">https://github.com/expressjs/express</a></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> node.js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> node.js </tag>
            
            <tag> express </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>css实现第二行缩进</title>
      <link href="/2019/05/10/css%E5%AE%9E%E7%8E%B0%E7%AC%AC%E4%BA%8C%E8%A1%8C%E7%BC%A9%E8%BF%9B/"/>
      <url>/2019/05/10/css%E5%AE%9E%E7%8E%B0%E7%AC%AC%E4%BA%8C%E8%A1%8C%E7%BC%A9%E8%BF%9B/</url>
      
        <content type="html"><![CDATA[<h3 id="首行缩进"><a href="#首行缩进" class="headerlink" title="首行缩进"></a>首行缩进</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span>&#123;</span><br><span class="line">   <span class="attribute">text-indent</span>:<span class="number">2em</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="实现第二行-后续所有行-缩进"><a href="#实现第二行-后续所有行-缩进" class="headerlink" title="实现第二行(后续所有行) 缩进"></a>实现第二行(后续所有行) 缩进</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span>&#123;</span><br><span class="line">   <span class="attribute">text-indent</span>: -<span class="number">2em</span>;</span><br><span class="line">   <span class="attribute">padding-left</span>: <span class="number">2em</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> css </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>css counter-increment 属性</title>
      <link href="/2019/04/26/CSS-counter-increment-%E5%B1%9E%E6%80%A7/"/>
      <url>/2019/04/26/CSS-counter-increment-%E5%B1%9E%E6%80%A7/</url>
      
        <content type="html"><![CDATA[<h3 id="counter-increment"><a href="#counter-increment" class="headerlink" title="counter-increment"></a>counter-increment</h3><ul><li>counter-increment属性递增一个或多个计数器值。</li><li>counter-increment属性通常用于counter-reset属性和content属性。<h3 id="用法："><a href="#用法：" class="headerlink" title="用法："></a>用法：</h3>通常用来对部分和子部分进行编号（比如 “Section 1”、”1.1”、”1.2”）的方法：<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="attribute">counter-reset</span>:section;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="selector-tag">h1</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="attribute">counter-reset</span>:subsection;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="selector-tag">h1</span><span class="selector-pseudo">:before</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="attribute">counter-increment</span>:section;</span><br><span class="line">    <span class="attribute">content</span>:<span class="string">"Section "</span> <span class="built_in">counter</span>(section) <span class="string">". "</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="selector-tag">h2</span><span class="selector-pseudo">:before</span> </span><br><span class="line">&#123;</span><br><span class="line">    <span class="attribute">counter-increment</span>:subsection;</span><br><span class="line">    <span class="attribute">content</span>:<span class="built_in">counter</span>(section) <span class="string">"."</span> <span class="built_in">counter</span>(subsection) <span class="string">" "</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> css </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
            <tag> counter-increment </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript基础-初识闭包</title>
      <link href="/2019/04/22/JavaScript%E5%9F%BA%E7%A1%80-%E5%88%9D%E8%AF%86%E9%97%AD%E5%8C%85/"/>
      <url>/2019/04/22/JavaScript%E5%9F%BA%E7%A1%80-%E5%88%9D%E8%AF%86%E9%97%AD%E5%8C%85/</url>
      
        <content type="html"><![CDATA[<h2 id="什么是闭包？"><a href="#什么是闭包？" class="headerlink" title="什么是闭包？"></a>什么是闭包？</h2><p>闭包其实是一种函数，所以，闭包技术也是函数的一种；闭包能做的事函数都能做。（定义在一个函数内部的函数）<br>当一个内部函数被其外部函数之外的变量引用时，就形成了闭包。</p><h2 id="闭包的用处："><a href="#闭包的用处：" class="headerlink" title="闭包的用处："></a>闭包的用处：</h2><ul><li>一是读取函数内部的变量；</li><li>二是让这些变量始终储存在内存中。<h2 id="最基本的形态"><a href="#最基本的形态" class="headerlink" title="最基本的形态:"></a>最基本的形态:</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"> <span class="keyword">var</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(a);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> func = test();</span><br><span class="line">func();</span><br></pre></td></tr></table></figure></li></ul><h2 id="封闭作用域："><a href="#封闭作用域：" class="headerlink" title="封闭作用域："></a>封闭作用域：</h2><h3 id="JavaScript的GC机制"><a href="#JavaScript的GC机制" class="headerlink" title="JavaScript的GC机制"></a>JavaScript的GC机制</h3><p>在JavaScript中，如果一个对象不再被引用，那么这个对象就会被GC回收，否则这个对象一直保存在内存中。<br>封闭作用域</p><p>封闭作用域又称为封闭空间，还有一个名称叫小闭包，以及匿名函数自调。</p><h3 id="基本结构："><a href="#基本结构：" class="headerlink" title="基本结构："></a>基本结构：</h3><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">(<span class="function"><span class="keyword">function</span><span class="params">()</span><span class="comment">&#123;&#125;</span>)<span class="params">()</span>;</span></span><br><span class="line">;(<span class="function"><span class="keyword">function</span><span class="params">()</span><span class="comment">&#123;&#125;</span>)<span class="params">()</span>;</span></span><br><span class="line">+(<span class="function"><span class="keyword">function</span><span class="params">()</span><span class="comment">&#123;&#125;</span>)<span class="params">()</span>;</span></span><br><span class="line">-(<span class="function"><span class="keyword">function</span><span class="params">()</span><span class="comment">&#123;&#125;</span>)<span class="params">()</span>;</span></span><br><span class="line">?(<span class="function"><span class="keyword">function</span><span class="params">()</span><span class="comment">&#123;&#125;</span>)<span class="params">()</span>;</span></span><br></pre></td></tr></table></figure><h3 id="最大目的：全局变量私有化。"><a href="#最大目的：全局变量私有化。" class="headerlink" title="最大目的：全局变量私有化。"></a>最大目的：全局变量私有化。</h3><h3 id="技术优点："><a href="#技术优点：" class="headerlink" title="技术优点："></a>技术优点：</h3><ul><li>不污染全局空间</li><li>内部所有的临时变量</li><li>可以保存全局数据<h2 id="作用域链"><a href="#作用域链" class="headerlink" title="作用域链"></a>作用域链</h2>作用域链由内到外，依次查找，不能由外到内。<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="number">99</span>;</span><br><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(a);</span><br><span class="line">&#125;)();</span><br><span class="line">&#125;)();</span><br><span class="line">&#125;)();</span><br><span class="line">&#125;)();</span><br><span class="line"></span><br><span class="line"><span class="comment">//结果：99</span></span><br></pre></td></tr></table></figure></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--高级排他 案例--&gt;</span><br><span class="line"><span class="comment">//只给鼠标选中的li标签添加 current类名</span></span><br><span class="line"><span class="keyword">var</span> allLis = <span class="built_in">document</span>.getElementsByClassName(<span class="string">"li"</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;allLis.length;i++)&#123;</span><br><span class="line">allLis[i].onmouseover = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;allLis.length;j++)&#123;</span><br><span class="line">allLis[j].className = <span class="string">""</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">this</span>.className = <span class="string">"current"</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//每次执行都要遍历所有的li标签并清除其类名</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;!--闭包优化版本（高级排他）：--&gt;</span><br><span class="line"><span class="keyword">var</span> allLis = <span class="built_in">document</span>.getElementsByClassName(<span class="string">"li"</span>);</span><br><span class="line"><span class="keyword">var</span> lastone = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;allLis.length;i++)&#123;</span><br><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params">index</span>)</span>&#123;</span><br><span class="line">allLis[index].onmouseover = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">allLis[lastone].className = <span class="string">""</span>;</span><br><span class="line"><span class="keyword">this</span>.className = <span class="string">"current"</span>;</span><br><span class="line">lastone = index;</span><br><span class="line">&#125;</span><br><span class="line">&#125;)(i);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="参数的传递"><a href="#参数的传递" class="headerlink" title="参数的传递"></a>参数的传递</h2><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"> <span class="function"><span class="keyword">function</span> <span class="title">test</span><span class="params">(x)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="function"><span class="keyword">function</span><span class="params">(y)</span></span>&#123;</span><br><span class="line">alert(x + y);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">test(<span class="number">3</span>)(<span class="number">4</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 结果：7</span></span><br></pre></td></tr></table></figure><h2 id="向左-向右-小案例"><a href="#向左-向右-小案例" class="headerlink" title="向左-向右 小案例"></a>向左-向右 小案例</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//点击对应的图片 使其左移，右移</span></span><br><span class="line"><span class="keyword">var</span> left = <span class="number">0</span>, right = <span class="number">0</span>, speed = <span class="number">50</span>;</span><br><span class="line"><span class="keyword">var</span> lImg = <span class="built_in">document</span>.getElementsById(<span class="string">"l"</span>);</span><br><span class="line"><span class="keyword">var</span> rImg = <span class="built_in">document</span>.getElementById(<span class="string">"r"</span>);</span><br><span class="line">lImg.onmousedown = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">left -= speed;</span><br><span class="line"><span class="keyword">this</span>.style.marginLeft = left + <span class="string">'px'</span>;</span><br><span class="line">&#125;</span><br><span class="line">rImg.onmousedown = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">left += speed;</span><br><span class="line"><span class="keyword">this</span>.style.marginLeft = left + <span class="string">'px'</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//闭包优化版本</span></span><br><span class="line"><span class="keyword">var</span> lImg = <span class="built_in">document</span>.getElementsById(<span class="string">"l"</span>);</span><br><span class="line"><span class="keyword">var</span> rImg = <span class="built_in">document</span>.getElementById(<span class="string">"r"</span>);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">move</span>(<span class="params">speed</span>)</span>&#123;</span><br><span class="line"><span class="keyword">var</span> num = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">num += speed;</span><br><span class="line"><span class="keyword">this</span>.style.marginLeft = num + <span class="string">'px'</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">lImg.onmousedown = move(<span class="number">-50</span>);</span><br><span class="line">rImg.onmousedown = move(<span class="number">50</span>);</span><br></pre></td></tr></table></figure><h2 id="函数节流"><a href="#函数节流" class="headerlink" title="函数节流"></a>函数节流</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">throttle</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">var</span> timer = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">clearTimeout(timer);</span><br><span class="line">timer = setTimeout(fn,delay);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">window</span>.onresize = throttle(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"aaa"</span>);</span><br><span class="line">&#125;,<span class="number">400</span>)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> 闭包 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
